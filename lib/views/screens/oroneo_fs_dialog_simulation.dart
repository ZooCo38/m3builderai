import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import '../../widgets/oroneo/oroneo_app_bar.dart';

class OroneoFsDialogSimulation extends StatelessWidget {
  final VoidCallback onClose;
  final VoidCallback onViewSimulation;  // Nouveau callback
  final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();

  OroneoFsDialogSimulation({
    super.key,
    required this.onClose,
    required this.onViewSimulation,  // Ajout du param√®tre
  });

  Widget _buildSvgIcon(String assetName, {double size = 24, Color? color}) {
    return SvgPicture.asset(
      'assets/oroneo/icons/$assetName.svg',
      width: size,
      height: size,
      colorFilter: color != null ? ColorFilter.mode(color, BlendMode.srcIn) : null,
    );
  }

  final List<String> _steps = [
    'Informations personnelles',
    'Relev√© de carri√®re',
    'Statuts actuels et objectifs'
  ];
  final int _currentStep = 0;

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final colorScheme = theme.colorScheme;

    return Scaffold(
      key: _scaffoldKey,
      backgroundColor: colorScheme.background,
      appBar: OroneoAppBar(
        onMenuPressed: () => _scaffoldKey.currentState?.openDrawer(),
        onBackPressed: onClose,
      ),
      body: Column(
        children: [
          // Carte d'avancement fixe
          Card(
            margin: const EdgeInsets.all(16),
            child: Padding(
              padding: const EdgeInsets.all(16),
              child: Row(
                children: [
                  SizedBox(
                    width: 60,
                    height: 60,
                    child: CircularProgressIndicator(
                      value: (_currentStep + 1) / _steps.length,
                      strokeWidth: 8,
                      backgroundColor: colorScheme.surfaceVariant,
                      color: colorScheme.primary,
                    ),
                  ),
                  const SizedBox(width: 16),
                  Expanded(
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: _steps.asMap().entries.map((entry) {
                        final isCurrentStep = entry.key == _currentStep;
                        return Padding(
                          padding: const EdgeInsets.symmetric(vertical: 4),
                          child: Text(
                            entry.value,
                            style: theme.textTheme.bodyMedium?.copyWith(
                              fontWeight: isCurrentStep ? FontWeight.bold : FontWeight.normal,
                              color: isCurrentStep ? colorScheme.primary : null,
                            ),
                          ),
                        );
                      }).toList(),
                    ),
                  ),
                ],
              ),
            ),
          ),
          
          // Zone de chat scrollable
          Expanded(
            child: ListView(
              padding: const EdgeInsets.symmetric(horizontal: 16),
              children: [
                // Messages existants
                _buildAIMessage(
                  context,
                  "Bonjour John ! Je suis Claire Monet, votre conseill√®re retraite num√©rique. Je vais vous aider √† constituer votre dossier pour simuler votre future retraite. Nous commencerons par obtenir votre relev√© de carri√®re, document indispensable pour une estimation pr√©cise.\n\nPuis-je vous poser quelques questions pour vous guider ?",
                ),
                const SizedBox(height: 16),
                _buildUserMessage(context, "Bonjour Claire, oui bien s√ªr."),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "Super. Voici les premi√®res informations dont j'ai besoin :\n\nVotre date de naissance\n\nVotre num√©ro de s√©curit√© sociale\n\nAvez-vous d√©j√† cr√©√© un compte sur le site info-retraite.fr ?",
                ),
                const SizedBox(height: 16),
                _buildUserMessage(
                  context,
                  "Je suis n√© le 15 mars 1980. Mon num√©ro de s√©cu commence par 18003... et non, je n'ai jamais cr√©√© de compte.",
                ),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "Merci John ! Voici les prochaines √©tapes pour cr√©er votre compte et obtenir votre relev√© de carri√®re :\n\n‚úÖ Rendez-vous sur info-retraite.fr\n\n‚úÖ Cliquez sur ¬´ Mon compte retraite ¬ª\n\n‚úÖ Cr√©ez un compte via FranceConnect (en utilisant votre compte impots.gouv.fr, ameli.fr ou La Poste)\n\n‚úÖ Une fois connect√©, cliquez sur ¬´ Mon relev√© de carri√®re ¬ª\n\nSouhaitez-vous que je reste avec vous pendant cette √©tape pour vous guider en direct ?",
                ),
                const SizedBox(height: 16),
                _buildUserMessage(
                  context,
                  "Oui, je veux bien. Je suis sur le site, je vois FranceConnect.",
                ),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "Parfait. Connectez-vous avec l'identifiant de votre choix. Une fois connect√©, cherchez l'onglet \"Mes droits √† la retraite\", puis \"Mon relev√© de carri√®re\".\n\nPendant que vous faites cela, pouvez-vous aussi me dire :\n\n√Ä quel √¢ge souhaitez-vous partir √† la retraite ?\n\nQuel est votre statut actuel ? (salari√©, ind√©pendant, fonctionnaire, etc.)\n\nAvez-vous eu des p√©riodes de ch√¥mage, cong√© parental, ou arr√™t maladie longue dur√©e ?",
                ),
                const SizedBox(height: 16),
                _buildUserMessage(
                  context,
                  "Je vise 64 ans pour le d√©part. Je suis salari√© depuis toujours. J'ai eu 2 ans de ch√¥mage apr√®s mes √©tudes, et 6 mois d'arr√™t maladie en 2017.",
                ),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "Merci John, c'est tr√®s utile !\n\nüìù Voici ce que je note :\n\nD√©part souhait√© √† 64 ans\n\nCarri√®re salari√©e\n\n2 ans de ch√¥mage (√† pr√©ciser les ann√©es)\n\n6 mois d'arr√™t maladie (2017)\n\nUne fois que vous avez t√©l√©charg√© votre relev√© de carri√®re, vous pouvez me l'envoyer ici pour que je l'analyse et que nous lancions la simulation compl√®te.\n\nSouhaitez-vous que je vous aide √† v√©rifier s'il contient des anomalies (trous, trimestres manquants, etc.) ?",
                ),
                const SizedBox(height: 16),
                _buildUserMessage(
                  context,
                  "Oui, je viens de le t√©l√©charger. Je peux te l'envoyer ?",
                ),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "Absolument ! Envoyez-le ici, et je l'analyse pour vous. Je vous indiquerai si tout est correct ou s'il faut contacter une caisse de retraite.",
                ),
                const SizedBox(height: 16),
                _buildUserMessage(
                  context,
                  "Voil√†, j'ai envoy√© le fichier de mon relev√© de carri√®re.",
                  attachments: [
                    Chip(
                      label: const Text('releve_carriere.pdf'),
                      avatar: _buildSvgIcon('document', size: 16, color: colorScheme.primary),
                    ),
                  ],
                ),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "üìÑ Parfait, John. J'ai bien re√ßu votre relev√© de carri√®re et je viens de l'analyser.\n\n"
                  "üéØ Si je r√©capitule :\n\n"
                  "üë§ Vous √™tes un homme, √¢g√© de 47 ans\n\n"
                  "üíç Statut marital : Mari√©\n\n"
                  "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Nombre d'enfants : 2\n\n"
                  "üè¢ Profession : Salari√© depuis le d√©but de votre carri√®re\n\n"
                  "üìâ P√©riodes sp√©cifiques :\n"
                  "- 2 ans de ch√¥mage apr√®s vos √©tudes (entre 2003 et 2005)\n"
                  "- 6 mois d'arr√™t maladie en 2017\n\n"
                  "üéØ √Çge de d√©part souhait√© : 64 ans\n\n"
                  "üßæ Relev√© de carri√®re fourni et complet, sans anomalies majeures d√©tect√©es\n\n"
                  "Est-ce que toutes ces informations sont correctes avant que je lance la simulation de votre retraite ?",
                  action: ElevatedButton(
                    onPressed: () {},
                    style: ElevatedButton.styleFrom(
                      backgroundColor: colorScheme.primary,
                      foregroundColor: colorScheme.onPrimary,
                    ),
                    child: const Text('Lancer la simulation'),
                  ),
                ),
                const SizedBox(height: 16),
                _buildUserMessage(context, "Oui, c'est bien √ßa. Tu peux lancer."),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "üîÑ Tr√®s bien John. Je lance maintenant votre simulation personnalis√©e de retraite.\n\n"
                  "‚è≥ Cela prendra quelques minutes. Vous recevrez une notification d√®s que la simulation sera termin√©e, avec :\n\n"
                  "üìà Un r√©capitulatif de vos droits acquis\n\n"
                  "üìÜ Une projection de votre √¢ge de d√©part √† taux plein\n\n"
                  "üí∞ Une estimation de votre pension mensuelle nette\n\n"
                  "Je reste √† votre disposition si vous avez des questions pendant le traitement.",
                ),
                const SizedBox(height: 16),
                _buildAIMessage(
                  context,
                  "‚úÖ Votre simulation est termin√©e, John !\n"
                  "üëâ Acc√©dez √† votre simulation ici :",
                  action: ElevatedButton(
                    onPressed: onViewSimulation,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: colorScheme.primary,
                      foregroundColor: colorScheme.onPrimary,
                    ),
                    child: const Text('Voir ma simulation'),
                  ),
                ),
              ],
            ),
          ),
          
          // Zone de saisie unifi√©e
          Container(
            decoration: BoxDecoration(
              color: colorScheme.surface,
              border: Border(
                top: BorderSide(
                  color: colorScheme.outline.withOpacity(0.2),
                ),
              ),
            ),
            child: Column(
              children: [
                Container(
                  margin: const EdgeInsets.fromLTRB(16, 16, 16, 0),
                  decoration: BoxDecoration(
                    color: colorScheme.surfaceVariant,
                    borderRadius: const BorderRadius.only(
                      topLeft: Radius.circular(8),
                      topRight: Radius.circular(8),
                    ),
                  ),
                  child: TextField(
                    decoration: InputDecoration(
                      hintText: 'Votre message...',
                      border: InputBorder.none,
                      contentPadding: const EdgeInsets.all(16),
                      suffixIcon: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          IconButton(
                            icon: _buildSvgIcon('mic', color: colorScheme.primary),
                            onPressed: () {},
                          ),
                          IconButton(
                            icon: _buildSvgIcon('send', color: colorScheme.primary),
                            onPressed: () {},
                          ),
                        ],
                      ),
                    ),
                    maxLines: null,
                  ),
                ),
                Container(
                  margin: const EdgeInsets.fromLTRB(16, 0, 16, 16),
                  padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                  decoration: BoxDecoration(
                    color: colorScheme.surfaceVariant,
                    borderRadius: const BorderRadius.only(
                      bottomLeft: Radius.circular(8),
                      bottomRight: Radius.circular(8),
                    ),
                  ),
                  child: Row(
                    children: [
                      ActionChip(
                        avatar: _buildSvgIcon('attachment', size: 18, color: colorScheme.primary),
                        label: const Text('Fichier'),
                        onPressed: () {},
                        padding: const EdgeInsets.symmetric(horizontal: 4),
                      ),
                      const SizedBox(width: 8),
                      ActionChip(
                        avatar: _buildSvgIcon('image', size: 18, color: colorScheme.primary),
                        label: const Text('Images'),
                        onPressed: () {},
                        padding: const EdgeInsets.symmetric(horizontal: 4),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAIMessage(BuildContext context, String message, {Widget? action}) {
    final theme = Theme.of(context);
    final colorScheme = theme.colorScheme;

    return Container(
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: colorScheme.surfaceVariant,
        borderRadius: BorderRadius.circular(12),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Claire Monet',
            style: theme.textTheme.titleSmall?.copyWith(
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 4),
          Text(message),
          if (action != null) ...[
            const SizedBox(height: 12),
            action,
          ],
        ],
      ),
    );
  }

  Widget _buildUserMessage(BuildContext context, String message, {List<Widget>? attachments}) {
    final theme = Theme.of(context);
    final colorScheme = theme.colorScheme;

    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const Spacer(),
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.end,
            children: [
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: colorScheme.primaryContainer,
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Text(
                  message,
                  style: TextStyle(color: colorScheme.onPrimaryContainer),
                ),
              ),
              if (attachments != null) ...[
                const SizedBox(height: 8),
                ...attachments,
              ],
            ],
          ),
        ),
      ],
    );
  }
}